<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c7e4c044-e974-4037-b348-2af8d7465afa" name="Default" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageDataManager">
    <SUITE FILE_PATH="coverage/socketServer$App.coverage" NAME="App Coverage Results" MODIFIED="1536701049167" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/socketServer$Unnamed.coverage" NAME="Unnamed Coverage Results" MODIFIED="1536621534417" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="app.py" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/app.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="85">
              <caret line="5" column="0" lean-forward="false" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
              <folding>
                <element signature="e#0#19#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="SocketServer.py" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/SocketServer.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="442">
              <caret line="65" column="37" lean-forward="false" selection-start-line="65" selection-start-column="37" selection-end-line="65" selection-end-column="37" />
              <folding>
                <element signature="e#0#14#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>import socket\n\nTCP_IP \= \'127\.0\.0\.1\'\nTCP_PORT \= 25001\nBUFFER_SIZE \= 1024\n\nMESSAGE \= \&quot;Hello\, World\!\&quot;\n\ns \= socket\.socket\(socket\.AF_INET\, socket\.SOCK_STREAM\)\n\ns\.bind\(\(TCP_IP\, TCP_PORT\)\)\ns\.listen\(1\)\nconn\, addr \= serversocket\.accept\(\)\nprint \'Connection address\:\'\, addr\n\nwhile True\:\n  data \= conn\.recv\(BUFFER_SIZE\)\n  print addr\, \' \&gt;\&gt; \'\, data\n  data \= raw_input\(\'SERVER \&gt;\&gt; \'\)\n  conn\.send\(data\)\n\nconn\.close</find>
      <find>import socket\nimport select\nimport sys\n\n\nclass Server\:\n    def __init__\(self\)\:\n        self\.host \= \'\'\n        self\.port \= 5000\n        self\.server \= None\n        self\.inputs \= \[\]\n        self\.running \= True\n\n    \# Open the Main Server Socket\n    def open_socket\(self\)\:\n        try\:\n            self\.server \= socket\.socket\(socket\.AF_INET\, socket\.SOCK_STREAM\)\n            self\.server\.setsockopt\(socket\.SOL_SOCKET\, socket\.SO_REUSEADDR\, 1\)\n            self\.server\.bind\(\(self\.host\, self\.port\)\)\n            self\.server\.listen\(5\)\n            self\.server\.setblocking\(0\)\n\n            print \&quot;Listening on \%s\:\%s\&quot; \% \(self\.host\, self\.port\)\n\n        except socket\.error\, \(value\, message\)\:\n            if self\.server\:\n                self\.server\.close\(\)\n            print \&quot;Could not open socket\: \&quot; \+ message\n            sys\.exit\(1\)\n\n    \# Handle a new incomming client connection\n    def process_new_client\(self\)\:\n        print \&quot;Incoming Connection\&quot;\n        c \= Client\(self\.server\.accept\(\)\)\n        self\.inputs\.append\(c\)\n        c\.send\(\&quot;\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\\n\&quot;\)\n        c\.send\(\&quot;Welcome to the Hackbright Chat Server\\n\&quot;\)\n        c\.send\(\&quot;\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\\n\&quot;\)\n        c\.send\(\&quot;Please enter your screen name\:\\n\&quot;\)\n\n    \# Process a command received on the local console\n    def process_console_command\(self\, cmd\)\:\n        print \&quot;console\: \%s\&quot; \% cmd\n\n        if \(cmd \=\= \&quot;quit\&quot;\)\:\n            self\.shutdown\(\)\n\n    \# Process a message from a connected client\n    def process_client_message\(self\, client\)\:\n        \# Message from a client\n        data \= client\.socket\.recv\(1024\)\n        if data\:\n            msg \= data\.rstrip\(\)  \# Remove any line returns\n\n            if client\.screenname\:\n                \# This client session has set a screen name\n                self\.sendall\(msg\, client\.screenname\)  \# Send message to all the connected clients\n            else\:\n                \# The client session has not set a screenname\n                \# The first message we receive from them should contain the screen name\n                \#   \(limit 12 characters\)\n                client\.screenname \= msg\[\:12\]\n                self\.sendall\(\&quot;\%s logged in\&quot; \% client\.screenname\)\n\n        else\:\n            \# Close the connection with this client\n            client\.socket\.close\(\)\n            self\.inputs\.remove\(client\)\n            print \&quot;client disconnecting\&quot;\n\n            if client\.screenname\:\n                self\.sendall\(\&quot;\%s disconnected\&quot; \% client\.screenname\)\n\n    \# Send a message to all connected clients\n    def sendall\(self\, data\, fromuser\=None\)\:\n        for c in self\.inputs\:\n            if isinstance\(c\, Client\)\:\n                \# Only send a message if the user has \&quot;logged in\&quot; \(we have a username\)\n                if c\.screenname\:\n                    if fromuser\:\n                        c\.send\(\&quot;\:\:\&quot;\.join\(\[fromuser\, data\]\) \+ \&quot;\\n\&quot;\)\n                    else\:\n                        c\.send\(data \+ \&quot;\\n\&quot;\)\n            elif c \=\= sys\.stdin\:\n                \# Print to the local console\n                print \&quot;\%s \-\&gt; \%s\&quot; \% \(fromuser\, data\)\n\n    \# Shutdown the server\n    def shutdown\(self\)\:\n        \# Close all the connected clients\n        for c in self\.inputs\:\n            if isinstance\(c\, Client\)\:\n                self\.inputs\.remove\(c\)\n                c\.send\(\&quot;Server Shutting Down\!\\n\&quot;\)\n                c\.socket\.close\(\)\n\n        \# Now close the server socket\n        if self\.server\:\n            self\.server\.close\(\)\n\n        \# And stop running\n        self\.running \= False\n\n    \# Main Server Loop\n    def run\(self\)\:\n        \# Input Sources\n        self\.inputs \= \[self\.server\, sys\.stdin\]\n\n        self\.running \= True\n        while self\.running\:\n\n            \# Check if any of our input sources have data ready for us\n            inputready\, outputready\, exceptready \= select\.select\(self\.inputs\, \[\]\, \[\]\)\n\n            for s in inputready\:\n                if s \=\= self\.server\:\n                    self\.process_new_client\(\)\n\n                elif s \=\= sys\.stdin\:\n                    \# Handle standard input\n                    inp \= sys\.stdin\.readline\(\)\.rstrip\(\)\n                    self\.process_console_command\(inp\)\n\n                elif isinstance\(s\, Client\)\:\n                    \# Process a message from a connected client\n                    self\.process_client_message\(s\)\n\n        \# Shutdown the Server\n        self\.shutdown\(\)\n\n\n\# Class to keep track of a connected client\nclass Client\:\n    def __init__\(self\, \(socket\, address\)\)\:\n        self\.socket \= socket\n        self\.address \= address\n        self\.size \= 1024\n\n        self\.screenname \= None\n\n        self\.socket\.setblocking\(0\)\n\n    \# Pass along the server\'s fileno\(\) refernce\.\n    \# This lets the Client class pretend to be a socket\n    def fileno\(self\)\:\n        return self\.socket\.fileno\(\)\n\n        \# Send message to Client\n\n    def send\(self\, data\)\:\n        self\.socket\.send\(data\)\n\n\nif __name__ \=\= \&quot;__main__\&quot;\:\n    \# Create our server instance\n    s \= Server\(\)\n    \# Start Listening for incomming connections\n    s\.open_socket\(\)\n    \# Main loop of our server\n    s\.run\(\)\n</find>
      <find>print  self\.inputs\n            print  select\.select\(self\.inputs\, \[\]\, \[\]\)</find>
      <find>sele</find>
    </findStrings>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/app.py" />
        <option value="$PROJECT_DIR$/SocketServer.py" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="1912" />
    <option name="y" value="-8" />
    <option name="width" value="1296" />
    <option name="height" value="1040" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="socketServer" type="b2602c69:ProjectViewProjectNode" />
              <item name="socketServer" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="socketServer" type="b2602c69:ProjectViewProjectNode" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
      <pane id="Scratches" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/app.py" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.App">
    <configuration name="App" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\vzprojeto\AppData\Local\Continuum\anaconda3\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="socketServer" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/app.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="StructureViewFactory">
    <option name="ACTIVE_ACTIONS" value=",SHOW_INHERITED" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c7e4c044-e974-4037-b348-2af8d7465afa" name="Default" comment="" />
      <created>1536607492024</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1536607492024</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="1912" y="-8" width="1296" height="1040" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.25809062" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Python Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3291714" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3291714" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Data View" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/app.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding>
            <element signature="e#0#19#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="85">
          <caret line="5" column="0" lean-forward="false" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
          <folding>
            <element signature="e#0#19#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/SocketServer.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="442">
          <caret line="65" column="37" lean-forward="false" selection-start-line="65" selection-start-column="37" selection-end-line="65" selection-end-column="37" />
          <folding>
            <element signature="e#0#14#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>